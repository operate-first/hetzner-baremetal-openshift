- name: Retrieve first public key fingerprint
  uri:
    url: https://robot-ws.your-server.de/key
    return_content: yes
    method: GET
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    status_code: 200
  register: key
  delegate_to: localhost

- name: Check rescue mode
  uri:
    url: "https://robot-ws.your-server.de/boot/{{ hetzner_ip }}/rescue"
    method: GET
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    status_code: 200
  register: rescue
  delegate_to: localhost

- name: Activate rescue mode
  when:  rescue.json.rescue.active == false
  uri:
    url: "https://robot-ws.your-server.de/boot/{{ hetzner_ip }}/rescue"
    method: POST
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    body_format: form-urlencoded
    body:
      os: linux
      arch: 64
      authorized_key: "{{ key.json | community.general.json_query('[*].key.fingerprint') }}"
    status_code: 200
  register: activated
  delegate_to: localhost

- name: Execute hardware reset
  uri:
    url: "https://robot-ws.your-server.de/reset/{{ hetzner_ip }}"
    method: POST
    user: "{{ hetzner_webservice_username }}"
    password: "{{ hetzner_webservice_password }}"
    force_basic_auth: yes
    body: "type=hw"
    status_code: 200
    headers:
      Content-Type: "application/x-www-form-urlencoded"
  delegate_to: localhost

- name: Remove server from local known_hosts file
  local_action:
    module: command
    cmd: "/usr/bin/ssh-keygen -R {{ inventory_hostname }}"
  ignore_errors: yes

- name: Pause a bit for the hardware reset to kick in
  pause: seconds=15

- name: Wait 300 seconds for port 22 to become open
  wait_for:
    port: 22
    host: '{{ inventory_hostname }}'
    delay: 10
    timeout: 300
  connection: local

- name: Ping rescue system
  ping:
  retries: 10
  delay: 1
