---
- name: Run once block
  run_once: true
  delegate_to: localhost
  block:
  - name: Ensure installion directory
    file:
      path: "{{ openshift_install_dir }}"
      state: directory

  - name: Create install config
    template:
      src: install-config.yaml.j2
      dest: "{{ openshift_install_dir }}/install-config.yaml"

  - name: Save install-config from deletion
    copy:
      dest: "{{ openshift_install_dir }}/install-config.yaml.original"
      src: "{{ openshift_install_dir }}/install-config.yaml"


  - name: Create manifests
    command: "{{ openshift_install_command }} --dir={{ openshift_install_dir }} create manifests"


  - name: Enable IPSec
    copy:
      dest: "{{ openshift_install_dir }}/manifests/cluster-network-03-config.yml"
      content: |
        apiVersion: operator.openshift.io/v1
        kind: Network
        metadata:
          name: cluster
        spec:
          defaultNetwork:
            ovnKubernetesConfig:
              ipsecConfig: {}

  - name: Create ignition files
    command: "{{ openshift_install_command }} --dir={{ openshift_install_dir }} create ignition-configs"
    args:
      creates: "{{ openshift_install_dir}}/bootstrap.ign"
# End block with local execution

- name: Create RHCOS Config
  copy:
    dest: /root/config.rcc
    content: |
      variant: rhcos
      version: 0.1.0
      ignition:
        config:
          merge:
            - local: {{ ignition_name }}
      {% if inventory_hostname in groups['masters'] %}
      boot_device:
        mirror:
          devices:
            - /dev/{{ hetzner_disk1 }}
            - /dev/{{ hetzner_disk2 }}
      {% endif %}
      storage:
        files:
          - path: /etc/hostname
            contents:
              source: data:,{{ inventory_hostname }}
            mode: 420

- name: Copy ignition
  copy:
    src: "{{ openshift_install_dir }}/{{ ignition_name }}"
    dest: "/root/{{ ignition_name }}"

- name: Mangle ignition config
  command: "{{ butane }} --files-dir . config.rcc --output config.ignition"
