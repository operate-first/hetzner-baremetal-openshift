---
- name: Configure hrobot firewall
  connection: local
  block:
    - name: Gather hcloud server infos
      hcloud_server_info:
        api_token: "{{ hcloud_api_token }}"
        name: "{{cluster_name }}-lb-private"
      register: output

    - name: Create inital rules_input
      set_fact:
        rules_input:
          - name: Allow outgoing connections
            ip_version: ipv4
            dst_port: '32768-65535'
            protocol: tcp
            tcp_flags: ack
            action: accept
          - name: Allow ICMP
            ip_version: ipv4
            protocol: icmp
            action: accept
          - name: Allow SSH
            ip_version: ipv4
            dst_port: '22'
            protocol: tcp
            action: accept
          - name: Allow private network
            ip_version: ipv4
            src_ip: "192.168.0.0/16"
            protocol: tcp
            action: accept


    - name: Allow API traffic to masters
      set_fact:
        rules_input: "{{ rules_input }} +
          [
            {
              'name': 'Allow API traffic',
              'ip_version': 'ipv4',
              'dst_port': '6443',
              'action': 'accept'
            }
          ]"
      when: "'masters' not in group_names or 'bootstrap' not in group_names"
      # with_items: "{{ groups['masters'] + groups['bootstrap'] }}"
      # when: item != inventory_hostname


    - name: Allow ingress traffic to workers
      set_fact:
        rules_input: "{{ rules_input }} +
          [
            {
              'name': 'Allow ingress traffic',
              'ip_version': 'ipv4',
              'dst_port': '443,80',
              'action': 'accept'
            }
          ]"
      when: "'workers' not in group_names"
      # with_items: "{{ groups['workers'] }}"
      # when: item != inventory_hostname

    # - debug: var=rules_input

    - name: Configure firewall
      community.hrobot.firewall:
        hetzner_user: "{{ hetzner_webservice_username }}"
        hetzner_password: "{{ hetzner_webservice_password }}"
        server_ip: "{{ hetzner_ip }}"
        state: present
        whitelist_hos: yes
        rules:
          input: "{{ rules_input }}"
